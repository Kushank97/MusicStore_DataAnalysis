Who is the senior most employee based on job title?

select * 
from employee
order by levels desc 
limit 1


Which countries have the most Invoices?

select count
	(customer_id) as no_invoice , billing_country from invoice
group by 
	billing_country
order by 
	no_invoice desc


What are top 3 values of total invoice?

select 
	total 
from 
	invoice
order by 
	total desc
	limit 3 

Which city has the best customers? We would like to throw a promotional Music Festival in the city 
we made the most money. Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals

SELECT 
    billing_city,  
    ROUND(SUM(total)::numeric, 2) AS total_invoice
FROM 
    invoice
GROUP BY 
    billing_city
ORDER BY 
    total_invoice DESC;


Who is the best customer? The customer who has spent the most money will be declared the best customer. 
Write a query that returns the person who has spent the most money

select 
	c.customer_id,c.first_name,c.last_name, sum(invoice.total) as money_spent
from customer c
join invoice on 
	c.customer_id = invoice.customer_id
group by c.customer_id
order by money_spent desc
limit 1




Write query to return the email, first name, last name, & Genre of all Rock Music listeners. 
Return your list ordered alphabetically by email starting with A

SELECT DISTINCT 
    c.email, c.first_name, c.last_name, g.name AS genre
FROM 
    customer c
JOIN 
    invoice i ON c.customer_id = i.customer_id
JOIN 
    invoice_line il ON i.invoice_id = il.invoice_id
JOIN 
    track t ON il.track_id = t.track_id
JOIN 
    genre g ON t.genre_id = g.genre_id
WHERE 
    g.name = 'Rock'
ORDER BY 
    c.email


lets invite the artists who have written the most rock music in our dataset. 
Write a query that returns the Artist name and total track count of the top 10 rock bands

	
SELECT 
    ar.name AS artist_name,
    COUNT(t.track_id) AS no_of_rock_songs
FROM 
    track t
JOIN 
    genre g ON t.genre_id = g.genre_id
JOIN 
    album al ON t.album_id = al.album_id
JOIN 
    artist ar ON al.artist_id = ar.artist_id
WHERE 
    g.name = 'Rock'
GROUP BY 
    ar.artist_id, ar.name
ORDER BY 
    no_of_rock_songs DESC
LIMIT 10;
	
	
Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first

select 
	name, milliseconds from track
where 
	milliseconds > (select avg(milliseconds)as average_miliseconds from track)
order by milliseconds desc						



Q What is the total revenue generated by the store?

SELECT ROUND(SUM(total)::numeric, 2) AS total_revenue
FROM invoice;


Who are the top 5 customers by total spending?

SELECT 
    c.customer_id,
    CONCAT(c.first_name, ' ', c.last_name) AS customer_name,
    ROUND(SUM(i.total)::numeric, 2) AS total_spent
FROM customer c
JOIN invoice i ON c.customer_id = i.customer_id
GROUP BY c.customer_id, customer_name
ORDER BY total_spent DESC
LIMIT 5;

What are the top 5 most sold tracks by quantity?


SELECT 
    t.name AS track_name,
    SUM(il.quantity) AS total_quantity_sold
FROM invoice_line il
JOIN track t ON il.track_id = t.track_id
GROUP BY t.track_id, track_name
ORDER BY total_quantity_sold DESC
LIMIT 5;


 What is the revenue by country?


SELECT 
    billing_country,
    ROUND(SUM(total)::numeric, 2) AS revenue
FROM invoice
GROUP BY billing_country
ORDER BY revenue DESC;



Which genre has the highest number of tracks?


SELECT 
    g.name AS genre,
    COUNT(t.track_id) AS number_of_tracks
FROM genre g
JOIN track t ON g.genre_id = t.genre_id
GROUP BY g.genre_id, genre
ORDER BY number_of_tracks DESC
LIMIT 1;



